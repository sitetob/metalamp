import { callbackify } from 'node:util';
import through from 'through2';
import html2pug from 'html2pug';
import vinylToString from 'vinyl-contents-tostring';
import PluginError from 'plugin-error';
const PLUGIN_NAME = 'gulp-html2pug';
const convert = file => pug => Object.assign(file, {
  contents: file.isBuffer() ? Buffer.from(pug) : file.isStream() ? through().end(pug) : function (e) {
    throw e;
  }(new PluginError(PLUGIN_NAME, 'Invalid file')),
  extname: '.pug'
});
const transform = options => callbackify((file, enc) => {
  var _options, _html2pug;
  return vinylToString(file, enc).then((_html2pug = html2pug, _options = options, function html2pug(_argPlaceholder) {
    return _html2pug(_argPlaceholder, _options);
  })).then(convert(file));
});
export default ((options = {}) => through.obj(transform(options)));
//# sourceMappingURL=index.js.map